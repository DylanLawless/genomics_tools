pr[1]
or[1]
exp(cbind(coef(or[1]), confint(or[1])))
or <- as.data.frame(or)
or
or <-
lapply(split(q,
q$var_pos, drop = TRUE),
function(x)
exp(cbind(
coef(summary(glm(
pheno ~
binary,
family="binomial",
data=x)))))
)
or[1]
or <-
lapply(split(q,
q$var_pos, drop = TRUE),
function(x)
exp(cbind(
coef(summary(glm(
pheno ~
binary,
family="binomial",
data=x)))))
)
or[1]
fit <-
lapply(split(q,
q$var_pos, drop = TRUE),
function(x)
coef(summary(glm(
pheno ~
binary,
family="binomial",
data=x)))[,'Pr(>|z|)']
)
fit[1]
require(MASS)
exp(cbind(coef(or[1]), confint(or[1])))
or <-
lapply(split(q,
q$var_pos, drop = TRUE),
function(x)
exp(cbind(coef(summary(glm(
pheno ~
binary,
family="binomial",
data=x)))))
)
or
arm::coefplot(fit, trans=arm::invlogit, title="x")
arm::coefplot(fit[1], trans=arm::invlogit, title="x")
fit[1]
or[1]
arm::coefplot(or[1], trans=arm::invlogit, title="x")
or <-
lapply(split(q,
q$var_pos, drop = TRUE),
function(x)
glm(
pheno ~
binary,
family="binomial",
data=x))
or
arm::coefplot(or[1], trans=arm::invlogit, title="x")
or[1]
glm <- glm(
pheno ~
binary,
family="binomial",
data=q %>% select(var_pos == SNP2
))
glm <- glm(
pheno ~
binary,
family="binomial",
data=(q %>% select(var_pos == "SNP2")
))
q %>% select(var_pos == "SNP2")
View(q)
q %>% select(var_pos == SNP2)
q %>% select(var_pos == "SNP2")
q
q %>% filter(var_pos == "SNP2")
glm <- glm(
pheno ~
binary,
family="binomial",
data=(q %>% filter(var_pos == "SNP2")
))
arm::coefplot(glm, trans=arm::invlogit, title="x")
fit
arm::coefplot(glm, trans=arm::invlogit, title="x")
require(MASS)
exp(cbind(coef(glm), confint(glm)))
exp(cbind(coef(glm), confint(glm)))  %>% as.data.frame()
fit
fit_long
fit_long %>%
ggplot(aes(x=Position, y=(-log(binary)) ))+
geom_point()+
theme(axis.title.x=element_blank(),
panel.background = element_rect("#F7F7F7"))+ labs(x = "Position", y = "-log10 (Pvalue) ")+
geom_hline(linetype="dotted",
yintercept=-log10(.05/2))
# OR
glm <- glm(
pheno ~
binary,
family="binomial",
data=(q %>% filter(var_pos == "SNP2")
))
arm::coefplot(glm, trans=arm::invlogit, title="x")
require(MASS)
exp(cbind(coef(glm), confint(glm)))  %>% as.data.frame()
pr <- exp(cbind(coef(glm), confint(glm)))  %>% as.data.frame()
or <- exp(cbind(coef(glm), confint(glm)))  %>% as.data.frame()
fit_long
or
fit_long[SNP1,"binary"]
or[,"binary"]
or$Position <- 1
or
merge(fit_long,or)
merge(fit_long,or, by=Position )
join(fit_long,or, by=Position )
left_join(fit_long,or, by=Position )
or
cbind(fit_long,or )
fit_long
or
df[2, c(1:3)]
or[2, c(1:3)]
or_ci <- or[2, c(1:3)]
cbind(fit_long,or_ci )
fit_or <- cbind(fit_long,or_ci )
fit_or
fit_or %>%
ggplot(aes(x=Position, y=(-log(binary)) ))+
geom_point()+
theme(axis.title.x=element_blank(),
panel.background = element_rect("#F7F7F7"))+ labs(x = "Position", y = "-log10 (Pvalue) ")+
geom_hline(linetype="dotted",
yintercept=-log10(.05/2))
fit_or %>%
ggplot(aes(x=Position, y=(-log(binary)) ))+
geom_point(aes(size=V1))+
theme(axis.title.x=element_blank(),
panel.background = element_rect("#F7F7F7"))+ labs(x = "Position", y = "-log10 (Pvalue) ")+
geom_hline(linetype="dotted",
yintercept=-log10(.05/2))
fit_or
or_ci
sqrt(total)
sqrt(total*(20 - 0.7)/3.92)
SD=sqrt(total*(20 - 0.7)/3.92)
fit_or$sd <-sqrt(total*(20 - 0.7)/3.92)
fit_or
fit_or %>%
ggplot(aes(x=Position, y=(-log(binary)) ))+
geom_point(aes(size=V1, alpha=sd))+
theme(axis.title.x=element_blank(),
panel.background = element_rect("#F7F7F7"))+ labs(x = "Position", y = "-log10 (Pvalue) ")+
geom_hline(linetype="dotted",
yintercept=-log10(.05/2))
fit_or %>%
ggplot(aes(x=Position, y=(-log(binary)),
size=V1, alpha=sd))+
geom_point()+
theme(axis.title.x=element_blank(),
panel.background = element_rect("#F7F7F7"))+ labs(x = "Position", y = "-log10 (Pvalue) ")+
geom_hline(linetype="dotted",
yintercept=-log10(.05/2))
fit_or %>%
ggplot(aes(x=Position, y=(-log(binary)) ))+
geom_point(aes(size=V1, alpha=sd))+
theme(axis.title.x=element_blank(),
panel.background = element_rect("#F7F7F7"))+ labs(x = "Position", y = "-log10 (Pvalue) ")+
geom_hline(linetype="dotted",
yintercept=-log10(.05/2))
or
x
library(dplyr)
library(ggplot2)
library(tidyr)
# pheno
n_case = 20 # slider
n_control = 10 # slider
total = n_case+n_control
freq_pheno <- n_case/total
p1 <- total * freq_pheno
pheno <- as.data.frame( rep(1:0, each = p1, len = total) )%>% setNames(.,c("pheno"))
# geno case
freq_case_1 <- 0.5 # slider
freq_case_2 <- 0.6 # slider
n1 <- n_case * freq_case_1
n2 <- n_case * freq_case_2
case_1 <- as.data.frame( rep(1,n1) ) %>% setNames(.,c("SNP1"))
case_0 <- as.data.frame( rep(0,n_case-n1) ) %>% setNames(.,c("SNP1"))
SNP1 <- rbind(case_1, case_0)
case_1 <- as.data.frame( rep(1,n2) ) %>% setNames(.,c("SNP2"))
case_0 <- as.data.frame( rep(0,n_case-n2) ) %>% setNames(.,c("SNP2"))
SNP2 <- rbind(case_1, case_0)
case_geno <- cbind(SNP1, SNP2)
# geno control
freq_control_1 <- 0.5 # slider
freq_control_2 <- 0.3 # slider
n1 <- n_control * freq_control_1
n2 <- n_control * freq_control_2
control_1 <- as.data.frame( rep(1,n1) ) %>% setNames(.,c("SNP1"))
control_0 <- as.data.frame( rep(0,n_control-n1) ) %>% setNames(.,c("SNP1"))
SNP1 <- rbind(control_1, control_0)
control_1 <- as.data.frame( rep(1,n2) ) %>% setNames(.,c("SNP2"))
control_0 <- as.data.frame( rep(0,n_control-n2) ) %>% setNames(.,c("SNP2"))
SNP2 <- rbind(control_1, control_0)
control_geno <- cbind(SNP1, SNP2)
df <- cbind(pheno, rbind(case_geno, control_geno))
q <- gather(df, SNP1:SNP2, key = "var_pos", value = "binary")
fit <-
lapply(split(q,
q$var_pos, drop = TRUE),
function(x)
coef(summary(glm(
pheno ~
binary,
family="binomial",
data=x)))[,'Pr(>|z|)']
)
fit <- as.data.frame(fit)
# Wide to long transpose
library(data.table)
fit_long <-transpose(fit)
# get row and colnames in order
colnames(fit_long) <- rownames(fit)
rownames(fit_long) <- colnames(fit)
# rownames to column
fit_long$var_pos <- row.names(fit_long)
library(stringr)
fit_long$Position <- as.numeric( str_replace_all(fit_long$var_pos, "SNP", "") )
fit_long %>%
ggplot(aes(x=Position, y=(-log(binary)) ))+
geom_point()+
theme(axis.title.x=element_blank(),
panel.background = element_rect("#F7F7F7"))+ labs(x = "Position", y = "-log10 (Pvalue) ")+
geom_hline(linetype="dotted",
yintercept=-log10(.05/2))
# OR
glm <- glm(
pheno ~
binary,
family="binomial",
data=(q %>% filter(var_pos == "SNP2")
))
arm::coefplot(glm, trans=arm::invlogit, title="x")
require(MASS)
or <- exp(cbind(coef(glm), confint(glm)))  %>% as.data.frame()
or$Position <- 1
or
or_ci <- or[2, c(1:3)]
or$Position <- 1
or_ci <- or[2, c(1:3)]
fit_or <- cbind(fit_long,or_ci )
fit_or$sd <-sqrt(total*(20 - 0.7)/3.92)
fit_or %>%
ggplot(aes(x=Position, y=(-log(binary)) ))+
geom_point(aes(size=V1, alpha=sd))+
theme(axis.title.x=element_blank(),
panel.background = element_rect("#F7F7F7"))+ labs(x = "Position", y = "-log10 (Pvalue) ")+
geom_hline(linetype="dotted",
yintercept=-log10(.05/2))
fit
orrr <-
lapply(split(q,
q$var_pos, drop = TRUE),
function(x)
exp(cbind(coef(
glm(
pheno ~
binary,
family="binomial",
data=x)
), confint(
glm(
pheno ~
binary,
family="binomial",
data=x)
)))  %>% as.data.frame()
)
orrr
orrr <-
lapply(split(q,
q$var_pos, drop = TRUE),
function(x)
(glm <- glm(pheno ~ binary,family="binomial",data=x))
exp(cbind(coef(
glm
), confint(
glm )))  %>% as.data.frame()
)
orrr <-
lapply(split(q,
q$var_pos, drop = TRUE),
function(x)
glm <- glm(pheno ~ binary,family="binomial",data=x)
exp(cbind(coef(
glm
), confint(
glm )))  %>% as.data.frame()
)
orrr <-
lapply(split(q,
q$var_pos, drop = TRUE),
function(x)
exp(cbind(coef(
glm(pheno ~ binary,family="binomial",data=x)
), confint(
glm(pheno ~ binary,family="binomial",data=x)
)))  %>% as.data.frame()
)
orrr
orrr <-
lapply(split(q,
q$var_pos, drop = TRUE),
function(x)
exp(cbind(coef(glm(pheno ~ binary,family="binomial",data=x)),
confint(       glm(pheno ~ binary,family="binomial",data=x)))) %>%
as.data.frame()
)
orrr
orr <-
lapply(split(q,
q$var_pos, drop = TRUE),
function(x)
exp(cbind(coef(glm(pheno ~ binary,family="binomial",data=x)),
confint(       glm(pheno ~ binary,family="binomial",data=x)))) %>%
as.data.frame()
)
orr_long <-transpose(orr)
orr_long
orr
fit
fit <-
lapply(split(q,
q$var_pos, drop = TRUE),
function(x)
coef(summary(glm(
pheno ~
binary,
family="binomial",
data=x)))[,'Pr(>|z|)']
)
fit <- as.data.frame(fit)
# Wide to long transpose
library(data.table)
fit_long <-transpose(fit)
# get row and colnames in order
colnames(fit_long) <- rownames(fit)
rownames(fit_long) <- colnames(fit)
# rownames to column
fit_long$var_pos <- row.names(fit_long)
library(stringr)
fit_long$Position <- as.numeric( str_replace_all(fit_long$var_pos, "SNP", "") )
fit_long %>%
ggplot(aes(x=Position, y=(-log(binary)) ))+
geom_point()+
theme(axis.title.x=element_blank(),
panel.background = element_rect("#F7F7F7"))+ labs(x = "Position", y = "-log10 (Pvalue) ")+
geom_hline(linetype="dotted",
yintercept=-log10(.05/2))
orr <-
lapply(split(q,
q$var_pos, drop = TRUE),
function(x)
exp(cbind(coef(glm(pheno ~ binary,family="binomial",data=x)),
confint(       glm(pheno ~ binary,family="binomial",data=x)))) %>%
as.data.frame()
)
class(orr)
class(orr)
class(fit)
fit <-
lapply(split(q,
q$var_pos, drop = TRUE),
function(x)
coef(summary(glm(
pheno ~
binary,
family="binomial",
data=x)))[,'Pr(>|z|)']
)
class(fit)
orr <-
lapply(split(q,
q$var_pos, drop = TRUE),
function(x)
exp(cbind(coef(glm(pheno ~ binary,family="binomial",data=x)),
confint(       glm(pheno ~ binary,family="binomial",data=x)))) %>%
as.data.frame()
)
class(orr)
as.data.frame(orr)
orr_long <- as.data.frame(orr)
orr_long
# get row and colnames in order
colnames(orr_long) <- rownames(orr)
rownames(orr_long) <- colnames(orr)
orr_long
as.data.frame(orr)
orr <-
lapply(split(q,
q$var_pos, drop = TRUE),
function(x)
exp(cbind(coef(glm(pheno ~ binary,family="binomial",data=x)),
confint(       glm(pheno ~ binary,family="binomial",data=x)))) %>%
as.data.frame()
)
class(orr)
orr_long <- as.data.frame(orr)
orr_long
orr <-
lapply(split(q,
q$var_pos, drop = TRUE),
function(x)
exp(cbind(coef(glm(pheno ~ binary,family="binomial",data=x)),
confint(       glm(pheno ~ binary,family="binomial",data=x)))) %>%
as.data.frame()
)
orr
as.data.frame(orr)
# OR
glm <- glm(
pheno ~
binary,
family="binomial",
data=(q %>% filter(var_pos == "SNP2")
))
arm::coefplot(glm, trans=arm::invlogit, title="x")
require(MASS)
or <- exp(cbind(coef(glm), confint(glm)))  %>% as.data.frame()
or$Position <- 1
or_ci <- or[2, c(1:3)]
fit_or <- cbind(fit_long,or_ci )
fit_or$sd <-sqrt(total*(20 - 0.7)/3.92)
or
orr
as.data.frame(orr)
do.call ( rbind , orr)
orr_long <- do.call ( rbind , orr)
orr_long
row.names(orr_long)
# rownames to column
orr_long$row <- row.names(orr_long)
orr_long
filter(orr_long, row=="binary")
grep("binary$", orr_long$row)
grep("binary", orr_long$row)
orr_long
orr_long%>% filter(str_detect(x, 'binary'))
orr_long%>% filter(str_detect(row, 'binary'))
orr_long%>% filter(str_detect(row.names(orr_long), 'binary'))
class(orr)
orr_long <- do.call ( rbind , orr)
orr_long%>% filter(str_detect(row.names(orr_long), 'binary'))
# rownames to column
orr_long%>% filter(str_detect(row.names(orr_long), 'binary'))
fit_long
orr_long <- do.call ( rbind , orr) %>% filter(str_detect(row.names(orr_long), 'binary'))
orr_long
cbind(fit_long, orr_long)
orr_long %>% rename(V1 = OR, '2.5 %' = lower)
orr_long %>% rename(V1 = "OR", '2.5 %' = lower)
orr_long %>% rename(V2 = V1, '2.5 %' = lower)
orr_long %>% rename(V2 = V1, lower = '2.5 %')
orr_long %>% rename(OR = V1, lower = '2.5 %')
orr_long %>% rename(OR = V1, lower = '2.5 %', higher = '97.5 %')
orr_long <- do.call ( rbind , orr) %>% filter(str_detect(row.names(orr_long), 'binary')) %>% rename(OR = V1, lower = '2.5 %', higher = '97.5 %')
class(orr)
orr_long <- do.call ( rbind , orr) %>% filter(str_detect(row.names(orr_long), 'binary'))
orr_long <- orr_long %>% rename(OR = V1, lower = '2.5 %', higher = '97.5 %')
cbind(fit_long, orr_long)
fit_or <- cbind(fit_long, orr_long)
fit_or <- cbind(fit_long, orr_long)
total
fit_or$sd <-sqrt(total*(higher - lower)/3.92)
fit_or$sd <-sqrt(total*(fit_or$higher - fit_or$lower)/3.92)
fit_or %>%
ggplot(aes(x=Position, y=(-log(binary)) ))+
geom_point(aes(size=V1, alpha=sd))+
theme(axis.title.x=element_blank(),
panel.background = element_rect("#F7F7F7"))+ labs(x = "Position", y = "-log10 (Pvalue) ")+
geom_hline(linetype="dotted",
yintercept=-log10(.05/2))
fit_or
fit_or %>%
ggplot(aes(x=Position, y=(-log(binary)) ))+
geom_point(aes(size=OR, alpha=sd))+
theme(axis.title.x=element_blank(),
panel.background = element_rect("#F7F7F7"))+ labs(x = "Position", y = "-log10 (Pvalue) ")+
geom_hline(linetype="dotted",
yintercept=-log10(.05/2))
fit_or %>%
ggplot(aes(x=Position, y=(-log(binary)) ))+
geom_point(aes(size=OR, alpha=rev(sd) ))+
theme(axis.title.x=element_blank(),
panel.background = element_rect("#F7F7F7"))+ labs(x = "Position", y = "-log10 (Pvalue) ")+
geom_hline(linetype="dotted",
yintercept=-log10(.05/2))
